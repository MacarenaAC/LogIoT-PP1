services:
  web_app:
    build:
      context: .
      dockerfile: Dockerfile.web_app
    container_name: web_app_aws
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./app.py:/app/app.py
      - ./templates:/app/templates
      - ./certificates:/app/certificates:ro
    environment:
      - AWS_IOT_ENDPOINT=${AWS_IOT_ENDPOINT}
      - AWS_IOT_PORT=${AWS_IOT_PORT}
      - AWS_CLIENT_ID=${AWS_CLIENT_ID}
      - AWS_ROOT_CA_PATH=${AWS_ROOT_CA_PATH}
      - AWS_CERT_PATH=${AWS_CERT_PATH}
      - AWS_PRIVATE_KEY_PATH=${AWS_PRIVATE_KEY_PATH}
    env_file: ./.env
    networks:
      - aws_iot_net
    depends_on:
      - influxdb

  influxdb:
    image: influxdb:2.7
    container_name: influxdb_aws
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    networks:
      - aws_iot_net

  telegraf:
    build:
      context: .
      dockerfile: Dockerfile.telegraf
    container_name: telegraf_aws
    restart: unless-stopped
    environment:
      - INFLUXDB_URL=${INFLUXDB_URL}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - AWS_IOT_ENDPOINT=${AWS_IOT_ENDPOINT}
      - AWS_IOT_PORT=${AWS_IOT_PORT}
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./certificates:/certificates:ro
    networks:
      - aws_iot_net
    depends_on:
      - influxdb
    healthcheck:
      test: ["CMD", "telegraf", "--test", "--config", "/etc/telegraf/telegraf.conf"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana-pdc-agent:
    image: grafana/pdc-agent:latest
    container_name: grafana_pdc_agent
    restart: unless-stopped
    command: [
      "-token", "${GRAFANA_CLOUD_TOKEN}",
      "-cluster", "prod-sa-east-1",
      "-gcloud-hosted-grafana-id", "1034361"
    ]
    networks:
      - aws_iot_net
    depends_on:
      - influxdb

networks:
  aws_iot_net:
    driver: bridge

volumes:
  influxdb_data:
  influxdb_config:
